{"ast":null,"code":"import _objectSpread from \"/Users/obaidaalbaroudi/Desktop/LambdaSchool/team-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/obaidaalbaroudi/Desktop/LambdaSchool/team-builder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/obaidaalbaroudi/Desktop/LambdaSchool/team-builder/src/Form.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Form = props => {\n  const _useState = useState({\n    Name: \"\",\n    Email: \"\",\n    Role: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  useEffect(() => {\n    setState(props.newValue);\n  }, [props.newValue]);\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    if (props.member === true) {\n      props.editMember(_objectSpread({}, state, {\n        [event.target.name]: event.target.value\n      }));\n      props.memberToEdit(false);\n      console.log(props.member);\n    } else {\n      props.setTeam([...props.team, state]);\n    }\n  };\n\n  const changeHandler = event => {\n    setState(_objectSpread({}, state, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"first-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \" Name: \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Name\",\n    value: state.Name,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"second-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \" Email: \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Email\",\n    value: state.Email,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"third-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" Role: \"), \" \", React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Role\",\n    value: state.Role,\n    onChange: changeHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"final-set\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/obaidaalbaroudi/Desktop/LambdaSchool/team-builder/src/Form.js"],"names":["React","useState","useEffect","Form","props","Name","Email","Role","state","setState","newValue","submitHandler","event","preventDefault","member","editMember","target","name","value","memberToEdit","console","log","setTeam","team","changeHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA,oBACMH,QAAQ,CAAC;AAC/BI,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,KAAK,EAAE,EAFwB;AAG/BC,IAAAA,IAAI,EAAE;AAHyB,GAAD,CADd;AAAA;AAAA,QACbC,KADa;AAAA,QACNC,QADM;;AAOpBP,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAACL,KAAK,CAACM,QAAP,CAAR;AAAyB,GADpB,EAEL,CAACN,KAAK,CAACM,QAAP,CAFK,CAAT;;AAMA,QAAMC,aAAa,GAAGC,KAAK,IAAG;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGT,KAAK,CAACU,MAAN,KAAiB,IAApB,EAAyB;AACrBV,MAAAA,KAAK,CAACW,UAAN,mBAAqBP,KAArB;AAA4B,SAACI,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAsBL,KAAK,CAACI,MAAN,CAAaE;AAA/D;AACAd,MAAAA,KAAK,CAACe,YAAN,CAAmB,KAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAK,CAACU,MAAlB;AAEH,KALD,MAKM;AACFV,MAAAA,KAAK,CAACkB,OAAN,CAAc,CAAC,GAAGlB,KAAK,CAACmB,IAAV,EAAgBf,KAAhB,CAAd;AACH;AACF,GAVH;;AAYE,QAAMgB,aAAa,GAAGZ,KAAK,IAAI;AAC7BH,IAAAA,QAAQ,mBACHD,KADG;AACI,OAACI,KAAK,CAACI,MAAN,CAAaC,IAAd,GAAsBL,KAAK,CAACI,MAAN,CAAaE;AADvC,OAAR;AAID,GALD;;AAOF,SACI;AAAM,IAAA,QAAQ,EAAEP,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,OACuB;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEH,KAAK,CAACH,IAA5C;AAAkD,IAAA,QAAQ,EAAEmB,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,CADJ,EAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,OACwB;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,KAAK,EAAEhB,KAAK,CAACF,KAA7C;AAAoD,IAAA,QAAQ,EAAEkB,aAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,OACuB;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,KAAK,EAAEhB,KAAK,CAACD,IAA5C;AAAkD,IAAA,QAAQ,EAAEiB,aAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvB,CAPJ,EAUI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,CAVJ,CADJ;AAiBH,CAjDD;;AAmDA,eAAerB,IAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\n\n\nconst Form = (props) => {\n    const [state, setState] = useState({\n        Name: \"\",\n        Email: \"\",\n        Role: \"\"\n      });     \n\n    useEffect(() => {\n        setState(props.newValue)},\n        [props.newValue])\n    \n    \n\n    const submitHandler = event =>{\n        event.preventDefault();\n        if(props.member === true){\n            props.editMember({...state, [event.target.name] : event.target.value})\n            props.memberToEdit(false)\n            console.log(props.member)\n\n        } else{\n            props.setTeam([...props.team, state]) \n        }\n      };\n    \n      const changeHandler = event => {\n        setState({\n          ...state, [event.target.name] : event.target.value\n        });\n    \n      }\n    \n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"first-set\">\n            <label> Name: </label> <input type=\"text\" name=\"Name\" value={state.Name} onChange={changeHandler} />\n            </div>\n            <div className=\"second-set\">\n            <label> Email: </label> <input type=\"text\" name=\"Email\" value={state.Email} onChange={changeHandler} />\n            </div>\n            <div className=\"third-set\">\n            <label> Role: </label> <input type=\"text\" name=\"Role\" value={state.Role} onChange={changeHandler} />\n            </div>\n            <div className=\"final-set\">\n            <button type=\"submit\">Submit</button>\n            </div>\n        </form>\n        \n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}